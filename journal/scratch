export CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"

export PROD_CONNECTION_URL="postgresql://CruddurR:Cruddur1!!xperience@cruddur-db-instance.ctkraqsqzpz8.us-west-2.rds.amazonaws.com:5432/cruddur"

aws lambda create-function \
    --function-name cruddur-post-confirmation \
    --region us-west-2  \
    --zip-file fileb://cruddur-post-confirmation.zip \
    --handler lambda_handler \
    --description cruddur \
    --runtime python3.8 \
    --role arn:aws:iam::051107296320:role/lambda-ex \
    --environment "Variables={PG_HOSTNAME=cruddur-db-instance.ctkraqsqzpz8.us-west-2.rds.amazonaws.com,PG_DATABASE=cruddur-db-instance,PG_USERNAME=CruddurR,PG_PASSWORD=Cruddur1234567890}"
    


export PG_HOSTNAME='cruddur
export PG_DATABASE='cruddur-db-instance'
export PG_USERNAME='CruddurR'
export PG_PASSWORD='Cruddur1234567890'

gp env PG_HOSTNAME='c
gp env PG_DATABASE='cruddur-db-instance'
gp env PG_USERNAME='CruddurR'
gp env PG_PASSWORD='Cru

zip cruddur-post-confirmation.zip cruddur-post-confirmation.py


import json
import psycopg2
import os

def lambda_handler(event, context):
    print("handler")
    user = event['request']['userAttributes']
    print(" USERS INFO")
    user_display_name  = user['name']
    user_email         = user['email']
    user_handle        = user['preferred_username']
    user_cognito_id    = user['sub']
    try:
        sql = f"""
            INSERT INTO public.users (
                display_name,
                email,
                handle,
                cognito_user_id
                )
            VALUES(
                '{user_display_name}',
                '{user_email}',
                '{user_handle}',
                '{user_cognito_id}'
            )
            """
        print("SQL Statement -----------")    
        print(sql)
        conn = psycopg2.connect(os.getenv('CONNECTION_URL'))
        cur = conn.cursor()
        cur.execute(sql)
        conn.commit() 
        print("conn confirmed")
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        if conn is not None:
            cur.close()
            conn.close()
            print('Database connection closed.')
    return event